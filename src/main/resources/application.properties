# SERVER SETTING
server.port=9099

# spring.mvc.view.prefix= WEB-INF/
#spring.mvc.view.suffix=.jsp

spring.datasource.platform=mysql
#spring.database.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# DISABLING DEFAULT ERROR PAGE
#server.error.whitelabel.enabled=false


# ===============================
# = DATA SOURCE
# ===============================

# Set here configurations for the database connection

# Connection url for the database
spring.datasource.url = jdbc:mysql://localhost/carrental?autoReconnect=true&useSSL=false&useUnicode=true&serverTimezone=UTC&characterEncoding=UTF8

# Username and password
spring.datasource.username = root
spring.datasource.password = 12345

# disable spring security login page
security.basic.enabled=false

# Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle = true
# spring.datasource.validationQuery = SELECT 1

# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
# spring.jpa.hibernate.ddl-auto = update
# spring.jpa.hibernate.ddl-auto = create
spring.jpa.hibernate.ddl-auto = none

# Naming strategy
spring.jpa.hibernate.naming.strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate.type=trace